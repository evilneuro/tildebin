#!/bin/sh
#
# /* $Id: update,v 1.2 2005/12/20 11:25:05 neuro Exp $ */
# 
# update, (c) 2005 William Anderson
#         http://neuro.me.uk/projects/lugradio/mirror/
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# ** set up constants for the mirror run:
#    the 'add' mirror script on the LR site
ADDURL=http://www.lugradio.org/addmirror
#    the location for the master audio archive
AUDLOC=http://audio.lugradio.org
#    your mirror's local path on the filesystem
MIRLOC=/store/mirrors/audio.lugradio.org
#    your mirror base URLs are pulled from this file to be passed to 
#    the 'add' mirror script
MIRFIL=$MIRLOC/meta/etc/mirurls
#    your mirror's sitecopy package name (optional)
MIRPKG=lrmirror
#    mirror maintainers update blog feed
MIRXML="http://mirrorblog.lugradio.xalior.com/?feed=rss2"
# MIRXML=http://venture.zensoft.net/cgi-bin/lrmfeed
#    mirror registration error output file
MIRERR="/export/transient/mirrors/alo.errors"

# http_proxy=http://slipstream.zensoft.net:800

# ** change dir to the local mirror location
if [ ! -d $MIRLOC ] ; then mkdir -p $MIRLOC; fi
cd $MIRLOC

# ** perform the download process; wget-tastic
if [ "$1" = "--down" ]
then
	cd ..
	for EPISODE in `curl -s "$MIRXML"| grep $AUDLOC | sed 's/<br \/>/ /g' | grep -v "<enclosure" | sed 's/<\!\[CDATA\[//g' | lynx -dump -stdin -dont_wrap_pre -width=130 | sort | uniq`
	do
		wget -r -m -np -c $EPISODE
	done
	cd -
	rm -rfv `find -type f | grep index.html`
	# ssh odyssey "rsync -avHS --delete --delete-excluded --exclude=meta --exclude=*-cbr.* --exclude=*-low.* --exclude=*-low-quality.* --exclude=*-64kbps.* /export/hosts/audio.lugradio.org/* /export/hosts/custom/audio.lugradio.org-highonly/"
fi

# ** if you need to upload your mirror elsewhere, let's do that with the
#    sitecopy package; you'll need to init the mirror manually first
#    this step is optional
# ++ note that this section is now modified to use multiple sitecopy profiles
#    to allow neuro to manage mrben's mirror too
if [ "$1" = "--up" ]
then 
	for MIRROR in neuro mrben
	do
		sitecopy -u lrmirror-$MIRROR
	done
fi

# ** Now let's talk to Aq's magic mirror maintenance m...scripts
if [ "$1" = "--register" ]
then
	# ++ note that this section is now modified to use multiple 
	# sitecopy profiles to allow neuro to manage mrben's mirror too
	for MIRROR in neuro # mrben
	do
		cd $MIRLOC
		# temp hack to permit neuro's mirror source to be a cut-down
		# version only holding high versions of the mp3s
		# if [ $MIRROR = neuro ] 
		# then
		# 	cd /export/nfs/odyssey/custom/audio.lugradio.org-highonly
		# fi
		echo " * processing mirror '$MIRROR'"

	MIRURL=`grep -v "^#" $MIRFIL | grep -w $MIRROR | cut -d= -f2-`

	for FILE in `find -type f | grep -v "./meta/"`
	do
		# echo $FILE
		if [ ! -d meta/checks/$MIRROR ]
		then 
			mkdir -p meta/checks/$MIRROR
		fi
		FILECHECK=meta/checks/$MIRROR/`echo $FILE | sed 's/\//_/g'`.check
		# echo $FILECHECK
		if [ ! -s $FILECHECK ]
		then
			echo -n "Registering `basename $FILE` ... "
			AUDURL=`echo $FILE | cut -d/ -f2-`
			# echo " with URL $MIRURL/$AUDURL ... "
			wget -c -q -O wget.log $ADDURL/$MIRURL/$AUDURL
			if [ "`grep 200 wget.log`" != "" ]
			then
				mv wget.log $FILECHECK
			else
				echo "$MIRURL/$AUDURL: `cat wget.log`" >> $MIRERR
				rm -f wget.log
			fi
			if [ -s $FILECHECK ] 
			then
				if [ "`grep '200: ' $FILECHECK`" = "" ] 
				then
					echo " failed (`echo \`cat $FILECHECK\``)"
				else
					echo " done"
				fi
			else
				echo " failed for an unlogged reason"
			fi
		# ** enable the two lines below if you want output to show
		#    that a file has been found, but not re-registered
		# else
		# 	echo "Already registered $FILE"
		fi
	done

	done
fi
